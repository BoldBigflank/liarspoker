extends layout

prepend scripts
    script(src="/socket.io/socket.io.js")
    script(src="/js/underscore.js")
    

prepend content
    .navbar.navbar-fixed-top
        .navbar-inner
            .container-fluid
                ul.nav.pull-left
                    li
                        p.brand.navbar-text.name.pull-left Liar's Poker
                        
                ul.nav.pull-right
                    li.dropdown
                        a.dropdown-toggle(href="#") 
                            i.icon-user  
                            span#playerScore(data-bind="text: player().score") Score
                ul.nav.pull-right
                    a.btn#brag Invite

    .container-fluid
        
        .row(data-bind="foreach: players")
            .span6(data-bind="visible: $parent.player()._id() != _id()")
                .row(data-bind="style:{ color: $parent.turn() && $parent.turn() == _id().toString() ? 'green' : ''}")
                    .span4
                        h1(data-bind="text: name")
                    .span2 
                        h1(data-bind="text: score")
                .row(data-bind="visible: viewModel.state() == 'result', foreach: hand")
                    .span1(data-bind="text:$data")
        .row(data-bind="visible: _bid.face() > 0")
            .span5
                h1
                    span(data-bind="text: _bid.name")
                    |  has bid 
                    span(data-bind="text: _bid.quantity")
                    |  
                    span(data-bind="text: _bid.face")
                    | 's
            
        .row
            .span5(data-bind="visible: player()._id() == turn() && state() == 'open'")
                .row
                    .span5
                        h1 Your bid
                .row
                    .span2
                        button.btn#challenge Challenge
                .row
                    .span1.offset2
                        button.btn(data-bind="click: function(){viewModel.myQuantity(viewModel.myQuantity()+1)}") +
                    .span1
                        button.btn(data-bind="click: function(){viewModel.myFace(viewModel.myFace()+1)}") +
                .row
                    .span2 Your Bid
                    .span1
                        span(data-bind="text: myQuantity")
                    .span1
                        span(data-bind="text: myFace")
                        | 's
                .row
                    .span1.offset2
                        button.btn(data-bind="click: function(){viewModel.myQuantity(viewModel.myQuantity()-1)}") -
                    .span1
                        button.btn(data-bind="click: function(){viewModel.myFace(viewModel.myFace()-1)}") -
                .row
                    .span2
                        button.btn#bid Bid
        .navbar.navbar-fixed-bottom
            .container-fluid
                .row
                    .alert.alert-error#alert(style="display: none") CRISIS ALERT
                .row(data-bind="visible: state()=='result'")
                    .alert(data-bind="text: viewModel.turn() == viewModel.player()._id() ? 'You win!' : 'You lose!', css: {'alert-success': viewModel.turn() == viewModel.player()._id(), 'alert-error':viewModel.turn() != viewModel.player()._id()}") Winning
                    //- button.btn#next Next
            
            .navbar-inner
                .container-fluid
                    .row(data-bind="style:{ color: turn() && turn() == player()._id() ? 'green' : ''}")
                        .span4
                            h1#playerName(data-bind="text: player().name")
                        .span2 
                            h1(data-bind="text: player().score")
                    .row(data-bind="foreach:player().hand")
                        .span1(data-bind="text:$data")


    
    script(src="/socket.io/socket.io.js")
    script
        var uuid = '#{uuid}'
        var gameName = '#{gameName}'
        var alertInterval
        var viewModel
        var socket = io.connect('#');
        socket.emit('join', {'gameName': gameName, 'uuid': uuid})

        socket.on('game', function(data){
            if(typeof viewModel == 'undefined'){
                viewModel = ko.mapping.fromJS(data)
                viewModel.player = ko.computed( function(){
                    return _.find( viewModel.players(), function(player){
                        return player._id() == uuid 
                     }) || { _id:'', name:'', score:0, hand:[]}
                })
                viewModel.myFace = ko.observable(parseInt(viewModel._bid.face()))
                viewModel.myQuantity = ko.observable(parseInt(viewModel._bid.quantity()))
                ko.applyBindings(viewModel);
            }
            else
                ko.mapping.fromJS(data, viewModel);
            console.log("Game", data)
        })

        socket.on('alert', function(data){ setAlert(data) })

        $("#playerName").click(function(){
            // Change the person's name
            socket.emit('name', prompt("Enter Your Name:", ""))
        })

        $("#bid").click(function(){
            // Validation here
            if(viewModel.myFace() <= 0 || viewModel.myQuantity() <= 0)
                setAlert("You must choose a valid bid")
            else if(viewModel.myFace() <= viewModel._bid.face() && viewModel.myQuantity() <= viewModel._bid.quantity() )
                setAlert("You must bid higher than the previous bid")
            else 
                socket.emit('bid', {name: viewModel.player().name(), face: viewModel.myFace(), quantity: viewModel.myQuantity()})
                
        })

        $("#challenge").click(function(){
            socket.emit('challenge')
        })

        $("#next").click(function(){
            socket.emit('next')
        })

        var setAlert = function(message){
            console.log("ALERT: ", message)
            $('#alert').html(message).show()
            clearInterval(alertInterval)
            alertInterval = setInterval(function(){$('#alert').hide()}, 4000)
        }

