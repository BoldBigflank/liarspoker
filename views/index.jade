extends layout

prepend scripts
    script(src="/socket.io/socket.io.js")
    script(src="/js/underscore.js")
    

prepend content
    .navbar.navbar-fixed-top
        .navbar-inner
            .container-fluid
                p.navbar-text.name.pull-left#playerName(data-bind="text: player().name") Name
                ul.nav.pull-right
                    li.dropdown
                        a.dropdown-toggle(href="#") 
                            span#playerScore(data-bind="text: player().score") Score
                            b.caret
                        ul.dropdown-menu#scores(data-bind="foreach: players")
                            li
                                span(data-bind="text: name")
                                |  -> 
                                span(data-bind="text: score")
                ul.nav.pull-right
                    a.btn#brag Invite

    .container-fluid
        .alert.alert-error#alert(style="display: none") CRISIS ALERT
        .row(data-bind="foreach: players")
            .span6(data-bind="visible: $parent.player()._id() != _id()")
                .row(data-bind="style:{ color: $parent._turn && $parent._turn._id() == _id() ? 'green' : ''}")
                    .span4
                        h1(data-bind="text: name")
                    .span2 
                        h1(data-bind="text: score")
                .row(data-bind="foreach: hand")
                    .span1(data-bind="text:$data")
        .row
            .span1
                h1 Bid
            .span2
                h1(data-bind="text: _bid.name")
            .span1
                h1(data-bind="text: _bid.face")
            .span1
                h1(data-bind="text: _bid.quantity")
        .row
            .span5(data-bind="visible: player()._id() == _turn._id()")
                .row
                    .span5
                        h1 Your bid
                .row
                    .span2
                        button.btn Call Liar
                .row
                    .span1.offset1
                        button.btn(data-bind="text: myQuantity, click: function(){viewModel.myQuantity(viewModel.myQuantity()-1)}") Fewer
                    .span1
                        button.btn(data-bind="text: myFace, click: function(){viewModel.myFace(viewModel.myFace()+1)}") Higher
                    .span1
                        button.btn(data-bind="click: function(){viewModel.myQuantity(viewModel.myQuantity()+1)}") More
                .row
                    .span1 Die
                    .span1 Die
                    .span1 Die
                    .span1 Die
                    .span1 Die
                    
                .row
                    .span1.offset2
                        button.btn(data-bind="click: function(){viewModel.myFace(viewModel.myFace()-1)}") Lower
                .row
                    .span2
                        button.btn#bid Bid
        .navbar.navbar-fixed-bottom
            .navbar-inner
                .container-fluid
                    h1(data-bind="text: player().name") Hand
                    .row(data-bind="foreach:player().hand")
                        .span1(data-bind="text:$data")

    
    script(src="/socket.io/socket.io.js")
    script
        var uuid = '#{uuid}'
        var gameId = '#{gameId}'
        var alertInterval
        var viewModel
        var socket = io.connect('#');
        socket.emit('join', {'gameId': gameId, 'uuid': uuid})

        socket.on('game', function(data){
            if(typeof viewModel == 'undefined'){
                viewModel = ko.mapping.fromJS(data)
                viewModel.player = ko.computed( function(){
                    return _.find( viewModel.players(), function(player){
                        return player._id() == uuid 
                     }) || { _id:'', name:'', score:0, hand:[]}
                })
                viewModel.myFace = ko.observable(parseInt(viewModel._bid.face()))
                viewModel.myQuantity = ko.observable(parseInt(viewModel._bid.quantity()))
                ko.applyBindings(viewModel);
            }
            else
                ko.mapping.fromJS(data, viewModel);
            console.log("Game", data)
            
            
        })

        socket.on('alert', function(data){
            console.log("ALERT: ", data)
            $('#alert').html(data).show()
            clearInterval(alertInterval)
            alertInterval = setInterval(function(){$('#alert').hide()}, 4000)
        })

        $("#playerName").click(function(){
            // Change the person's name
            socket.emit('name', prompt("Enter Your Name:", ""))
        })
        $("#bid").click(function(){
            socket.emit('bid', {name: viewModel.player().name(), face: viewModel.myFace(), quantity: viewModel.myQuantity()})
        })

